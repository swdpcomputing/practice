{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stephen Powell\\\\Documents\\\\repositories\\\\practice\\\\d3Practice\\\\d3-tutorials-point\\\\src\\\\components\\\\barChartScaled.jsx\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass BarChart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.drawChart();\n    };\n\n    this.drawChart = () => {\n      const {\n        data,\n        width,\n        height,\n        id\n      } = this.props;\n      const padding = 60;\n      const xScale = d3.scaleLinear().domain([0, d3.max(data, d => d[0])]).range([padding, width - padding]);\n      const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d[1])]).range([height - padding, padding]);\n      const svg = d3.select('#' + id).append(\"svg\").attr(\"width\", width).attr(\"height\", height).style(\"margin-left\", 100);\n      svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"x\", d => xScale(d[0])).attr(\"y\", d => yScale(d[1])).attr(\"width\", 10).attr(\"height\", (d, i) => d * 10).attr(\"fill\", \"blue\");\n      svg.selectAll(\"text\").data(data).enter().append(\"text\").text(d => d).attr(\"x\", d => xScale(d[0] + 10)).attr(\"y\", d => yScale(d[1]));\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: this.props.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      });\n    };\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["C:/Users/Stephen Powell/Documents/repositories/practice/d3Practice/d3-tutorials-point/src/components/barChartScaled.jsx"],"names":["React","Component","d3","BarChart","componentDidMount","drawChart","data","width","height","id","props","padding","xScale","scaleLinear","domain","max","d","range","yScale","svg","select","append","attr","style","selectAll","enter","i","text","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC7BG,iBAD6B,GACT,MAAM;AACtB,WAAKC,SAAL;AACH,KAH4B;;AAAA,SAK7BA,SAL6B,GAKjB,MAAM;AACd,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA,KAAP;AAAcC,QAAAA,MAAd;AAAsBC,QAAAA;AAAtB,UAA4B,KAAKC,KAAvC;AAEA,YAAMC,OAAO,GAAG,EAAhB;AAEA,YAAMC,MAAM,GAAGV,EAAE,CAACW,WAAH,GACDC,MADC,CACM,CAAC,CAAD,EAAIZ,EAAE,CAACa,GAAH,CAAOT,IAAP,EAAcU,CAAD,IAAOA,CAAC,CAAC,CAAD,CAArB,CAAJ,CADN,EAEDC,KAFC,CAEK,CAACN,OAAD,EAAUJ,KAAK,GAAGI,OAAlB,CAFL,CAAf;AAIA,YAAMO,MAAM,GAAGhB,EAAE,CAACW,WAAH,GACDC,MADC,CACM,CAAC,CAAD,EAAIZ,EAAE,CAACa,GAAH,CAAOT,IAAP,EAAcU,CAAD,IAAOA,CAAC,CAAC,CAAD,CAArB,CAAJ,CADN,EAEDC,KAFC,CAEK,CAACT,MAAM,GAAGG,OAAV,EAAmBA,OAAnB,CAFL,CAAf;AAIA,YAAMQ,GAAG,GAAGjB,EAAE,CAACkB,MAAH,CAAU,MAAMX,EAAhB,EACPY,MADO,CACA,KADA,EAEPC,IAFO,CAEF,OAFE,EAEOf,KAFP,EAGPe,IAHO,CAGF,QAHE,EAGQd,MAHR,EAIPe,KAJO,CAID,aAJC,EAIc,GAJd,CAAZ;AAMAJ,MAAAA,GAAG,CAACK,SAAJ,CAAc,MAAd,EACKlB,IADL,CACUA,IADV,EAEKmB,KAFL,GAGKJ,MAHL,CAGY,MAHZ,EAIKC,IAJL,CAIU,GAJV,EAIgBN,CAAD,IAAOJ,MAAM,CAACI,CAAC,CAAC,CAAD,CAAF,CAJ5B,EAKKM,IALL,CAKU,GALV,EAKeN,CAAD,IAAOE,MAAM,CAACF,CAAC,CAAC,CAAD,CAAF,CAL3B,EAMKM,IANL,CAMU,OANV,EAMmB,EANnB,EAOKA,IAPL,CAOU,QAPV,EAOoB,CAACN,CAAD,EAAIU,CAAJ,KAAUV,CAAC,GAAG,EAPlC,EAQKM,IARL,CAQU,MARV,EAQkB,MARlB;AAUAH,MAAAA,GAAG,CAACK,SAAJ,CAAc,MAAd,EACKlB,IADL,CACUA,IADV,EAEKmB,KAFL,GAGKJ,MAHL,CAGY,MAHZ,EAIKM,IAJL,CAIWX,CAAD,IAAOA,CAJjB,EAKKM,IALL,CAKU,GALV,EAKgBN,CAAD,IAAOJ,MAAM,CAACI,CAAC,CAAC,CAAD,CAAD,GAAO,EAAR,CAL5B,EAMKM,IANL,CAMU,GANV,EAMgBN,CAAD,IAAOE,MAAM,CAACF,CAAC,CAAC,CAAD,CAAF,CAN5B;AAOH,KAzC4B;;AAAA,SA2C7BY,MA3C6B,GA2CpB,MAAM;AACX,0BACI;AAAK,QAAA,EAAE,EAAE,KAAKlB,KAAL,CAAWD,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KA/C4B;AAAA;;AAAA;;AAkDjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart extends Component {\r\n    componentDidMount = () => {\r\n        this.drawChart();\r\n    }\r\n\r\n    drawChart = () => {\r\n        const {data, width, height, id} = this.props;\r\n\r\n        const padding = 60;\r\n\r\n        const xScale = d3.scaleLinear()\r\n                     .domain([0, d3.max(data, (d) => d[0])])\r\n                     .range([padding, width - padding]);\r\n\r\n        const yScale = d3.scaleLinear()\r\n                     .domain([0, d3.max(data, (d) => d[1])])\r\n                     .range([height - padding, padding]);\r\n\r\n        const svg = d3.select('#' + id)\r\n            .append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .style(\"margin-left\", 100);\r\n            \r\n        svg.selectAll(\"rect\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"x\", (d) => xScale(d[0]))\r\n            .attr(\"y\",(d) => yScale(d[1]))\r\n            .attr(\"width\", 10)\r\n            .attr(\"height\", (d, i) => d * 10)\r\n            .attr(\"fill\", \"blue\");\r\n\r\n        svg.selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"text\")\r\n            .text((d) => d)\r\n            .attr(\"x\", (d) => xScale(d[0] + 10))\r\n            .attr(\"y\", (d) => yScale(d[1]))\r\n    }\r\n\r\n    render = () => { \r\n        return (\r\n            <div id={this.props.id}></div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}