{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stephen Powell\\\\Documents\\\\repositories\\\\practice\\\\codeWithMosh\\\\masteringReact\\\\vidly\\\\src\\\\components\\\\common\\\\paginate.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Paginate = props => {\n  const {\n    itemsCount,\n    pageSize,\n    currentPage,\n    onPageChange\n  } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n\n  if (pagesCount === 1) {\n    return null;\n  } // No pages component if all items on one page\n\n\n  const pages = _.range(1, pagesCount + 1); // Lodash - Create range of numbers\n\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"mt-2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, pages.map(page => /*#__PURE__*/React.createElement(\"li\", {\n    key: page,\n    className: page === currentPage ? \"page-item active\" : \"page-item\",\n    onClick: () => onPageChange(page),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"page-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, page)))));\n}; //Typechecking with PropTypes\n\n\nPaginate.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n}; //PropTypes\n\nexport default Paginate;","map":{"version":3,"sources":["C:/Users/Stephen Powell/Documents/repositories/practice/codeWithMosh/masteringReact/vidly/src/components/common/paginate.jsx"],"names":["React","PropTypes","_","Paginate","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","cursor","map","page","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA,WAAxB;AAAqCC,IAAAA;AAArC,MAAsDJ,KAA5D;AACA,QAAMK,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAnB;;AACA,MAAIG,UAAU,KAAK,CAAnB,EAAsB;AACpB,WAAO,IAAP;AACD,GALyB,CAKxB;;;AACF,QAAMG,KAAK,GAAGV,CAAC,CAACW,KAAF,CAAQ,CAAR,EAAWJ,UAAU,GAAG,CAAxB,CAAd,CAN0B,CAMgB;;;AAE1C,sBACE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE;AAAV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT;AACE,IAAA,GAAG,EAAEA,IADP;AAEE,IAAA,SAAS,EAAEA,IAAI,KAAKT,WAAT,GAAuB,kBAAvB,GAA4C,WAFzD;AAGE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACQ,IAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CALF,CADD,CADH,CAJF,CADF;AAoBD,CA5BD,C,CA8BA;;;AACAb,QAAQ,CAACc,SAAT,GAAqB;AACnBZ,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC,UADV;AAEnBb,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,MAAV,CAAiBC,UAFR;AAGnBZ,EAAAA,WAAW,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UAHX;AAInBX,EAAAA,YAAY,EAAEP,SAAS,CAACmB,IAAV,CAAeD;AAJV,CAArB,C,CAMA;;AACA,eAAehB,QAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Paginate = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) {\r\n    return null;\r\n  } // No pages component if all items on one page\r\n  const pages = _.range(1, pagesCount + 1); // Lodash - Create range of numbers\r\n\r\n  return (\r\n    <nav\r\n      className=\"mt-2\"\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n            onClick={() => onPageChange(page)}\r\n          >\r\n            <button className=\"page-link\">\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//Typechecking with PropTypes\r\nPaginate.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n//PropTypes\r\nexport default Paginate;\r\n"]},"metadata":{},"sourceType":"module"}